% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/torch_linear_reg-fit.R
\name{torch_linear_reg}
\alias{torch_linear_reg}
\alias{torch_linear_reg.default}
\alias{torch_linear_reg.data.frame}
\alias{torch_linear_reg.matrix}
\alias{torch_linear_reg.formula}
\alias{torch_linear_reg.recipe}
\title{Fit a linear regression using torch}
\usage{
torch_linear_reg(x, ...)

\method{torch_linear_reg}{default}(x, ...)

\method{torch_linear_reg}{data.frame}(
  x,
  y,
  epochs = 100L,
  learning_rate = 0.01,
  conv_crit = 0,
  verbose = FALSE,
  ...
)

\method{torch_linear_reg}{matrix}(
  x,
  y,
  epochs = 100L,
  learning_rate = 0.01,
  conv_crit = 0,
  verbose = FALSE,
  ...
)

\method{torch_linear_reg}{formula}(
  formula,
  data,
  epochs = 100L,
  learning_rate = 0.01,
  conv_crit = 0,
  verbose = FALSE,
  ...
)

\method{torch_linear_reg}{recipe}(
  x,
  data,
  epochs = 100L,
  learning_rate = 0.01,
  conv_crit = 0,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{x}{Depending on the context:
\itemize{
\item A \strong{data frame} of predictors.
\item A \strong{matrix} of predictors.
\item A \strong{recipe} specifying a set of preprocessing steps
created from \code{\link[recipes:recipe]{recipes::recipe()}}.
}

The predictor data should be standardized (e.g. centered or scaled).}

\item{...}{Not currently used, but required for extensibility.}

\item{y}{When \code{x} is a \strong{data frame} or \strong{matrix}, \code{y} is the outcome
specified as:
\itemize{
\item A \strong{data frame} with 1 numeric column.
\item A \strong{matrix} with 1 numeric column.
\item A numeric \strong{vector}.
}}

\item{epochs}{An integer for the number of epochs of training.}

\item{learning_rate}{A positive number (usually less than 0.1).}

\item{conv_crit}{A non-negative number for convergence.}

\item{verbose}{A logical that prints out the iteration history.}

\item{formula}{A formula specifying the outcome terms on the left-hand side,
and the predictor terms on the right-hand side.}

\item{data}{When a \strong{recipe} or \strong{formula} is used, \code{data} is specified as:
\itemize{
\item A \strong{data frame} containing both the predictors and the outcome.
}}
}
\value{
A \code{torch_linear_reg} object.
}
\description{
\code{torch_linear_reg()} fits a model.
}
\examples{
predictors <- mtcars[, -1]
outcome <- mtcars[, 1]

# XY interface
mod <- torch_linear_reg(predictors, outcome)

# Formula interface
mod2 <- torch_linear_reg(mpg ~ ., mtcars)

# Recipes interface
library(recipes)
rec <- recipe(mpg ~ ., mtcars)
rec <- step_log(rec, disp)
mod3 <- torch_linear_reg(rec, mtcars)

}
